#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt (Optimized version)
#============================================================================================

name: 通用设备编译固件优化版

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: false
        default: "openwrt-main"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-v24.10.1
          - Lienol-master

env:
  TZ: Asia/Shanghai
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id == github.event.sender.id }}

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environment variables
        id: setenv
        run: |
          echo "FEEDS_CONF=config/${{ inputs.source_branch }}/feeds.conf.default" >> $GITHUB_ENV
          echo "CONFIG_FILE=config/${{ inputs.source_branch }}/config" >> $GITHUB_ENV
          echo "DIY_P1_SH=config/${{ inputs.source_branch }}/diy-part1.sh" >> $GITHUB_ENV
          echo "DIY_P2_SH=config/${{ inputs.source_branch }}/diy-part2.sh" >> $GITHUB_ENV

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "${TZ}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android || true
          sudo apt-get -y update
          sudo apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo apt-get -y autoremove --purge
          sudo apt-get clean
          sudo mkdir -p /workdir
          sudo chown $USER:$USER /workdir
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Clone source code [$ {{ inputs.source_branch }} ]
        id: codes
        working-directory: /workdir
        if: ${{ steps.init.outputs.status == 'success' && !cancelled() }}
        run: |
          case "${{ inputs.source_branch }}" in
            *openwrt*)    REPO_URL="https://github.com/openwrt/openwrt"; REPO_BRANCH="main"; TAGS_NAME="official" ;;
            *lede*)       REPO_URL="https://github.com/coolsnowwolf/lede"; REPO_BRANCH="master"; TAGS_NAME="lede" ;;
            *immortalwrt*)REPO_URL="https://github.com/immortalwrt/immortalwrt"; REPO_BRANCH="v24.10.1"; TAGS_NAME="immortalwrt" ;;
            *Lienol*)     REPO_URL="https://github.com/Lienol/openwrt"; REPO_BRANCH="22.03"; TAGS_NAME="Lienol" ;;
            *)            echo "Unknown source code repository."; exit 1 ;;
          esac
          git clone --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          echo "build_tag=OpenWrt_${TAGS_NAME}_$(date +%Y.%m)" >> $GITHUB_OUTPUT
          echo "REPO_URL: [ ${REPO_URL} ] REPO_BRANCH: [ ${REPO_BRANCH} ] TAGS_NAME: [ ${TAGS_NAME} ]"
          df -hT $PWD
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Load custom feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          [[ -f "${DIY_P1_SH}" ]] && chmod +x ${DIY_P1_SH}
          cd openwrt/
          [[ -f "${GITHUB_WORKSPACE}/${DIY_P1_SH}" ]] && ${GITHUB_WORKSPACE}/${DIY_P1_SH}

      - name: Update and install feeds
        run: |
          cd openwrt/
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          [[ -f "${DIY_P2_SH}" ]] && chmod +x ${DIY_P2_SH}
          cd openwrt/
          [[ -f "${GITHUB_WORKSPACE}/${DIY_P2_SH}" ]] && ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} +

      - name: Compile the OpenWrt
        id: compile
        timeout-minutes: 360
        run: |
          cd openwrt
          echo "::group::Compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "::endgroup::"
          echo "FILE_DATE=_$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Check space usage
        if: always()
        run: df -hT

      - name: Upload bin directory
        uses: actions/upload-artifact@v4
        if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
        with:
          name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: openwrt/bin

      - name: Organize files
        id: organize
        if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware directory
        uses: actions/upload-artifact@v4
        if: steps.organize.outputs.status == 'success' && !cancelled()
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: Generate release tag
        id: tag
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        run: |
          echo "release_tag=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT
          cat <<EOF > release.txt
### OpenWrt Image information
- Default IP: 192.168.1.1
- Default username: root
- Default password: password
- Default WIFI name: OpenWrt
- Default WIFI password: none
### Install to EMMC
- Login to OpenWrt → System → Amlogic Service → Install OpenWrt
### OpenWrt Image Verification
- sha256sum
EOF
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v2
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
          token: ${{ secrets.GITHUB_TOKEN }}
